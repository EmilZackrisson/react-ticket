{"version":3,"sources":["lastActive.js","App.js","Settings.js","Login.js","Logout.js","index.js"],"names":["lastActive","userStorage","localStorage","getItem","loggedInUser","JSON","parse","console","log","Axios","post","settings","SERVER_URL","email","then","catch","error","message","alert","App","_useState","useState","_useState2","Object","slicedToArray","issuesList","setIssuesList","_useState3","_useState4","username","setUsername","_useState5","_useState6","setEmail","_useState7","Boolean","_useState8","loggedIn","setLoggedIn","_useState9","_useState10","navButtonLink","setNavButtonLink","_useState11","_useState12","navButtonText","setNavButtonText","_useState13","_useState14","navUserState","setNavUserState","_useState15","_useState16","navHello","setNavHello","_useState17","name","issue","category","priority","_useState18","formData","setFormData","priorityList","text","value","debug","categories","map","item","react_default","a","createElement","key","priorities","useEffect","changedIssueStorage","changedIssue","objectSpread","removeItem","get","response","data","updateList","window","location","reload","_useState19","_useState20","validated","setValidated","_useState21","id","_useState22","issueUpdate","setIssueUpdate","handleUpdate","event","form","currentTarget","preventDefault","checkValidity","stopPropagation","patch","updater","setItem","stringify","submitIssue","senderName","senderEmail","complete","Fragment","Navbar","bg","expand","Container","fluid","Brand","href","Toggle","aria-controls","Collapse","Nav","className","style","maxHeight","navbarScroll","Link","Form","Text","Button","variant","Alert","noValidate","onSubmit","Row","FormGroup","md","controlId","Label","Control","required","type","placeholder","readOnly","onChange","e","target","Feedback","Group","InputGroup","hasValidation","aria-describedby","as","Select","aria-label","val","issueCardClasses","classNames","border-success","border-warning","time","Date","timestamp","toLocaleString","priorityText","priorityBadgeBg","secondary","info","warning","danger","issueJson","issueLength","length","updated","Card","Body","Title","Badge","dist_default","defaultValue","Check","label","checked","completeStatus","Number","String","onClick","Settings","password","permissionLevel","setPermissionLevel","userList","setUserList","permissionlevel","users","hash","replace","bcrypt","genSalt","err","salt","xmlns","width","height","fill","viewBox","d","userCreated","timeCreated","userLastLogin","lastLogin","userLastActive","Login","checkUser","compare","res","Logout","clear","ReactDOM","createRoot","document","getElementById","render","react_router_dom","react_router","exact","path","element","src_App","src_Settings","src_Login","src_Logout"],"mappings":"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","file":"static/js/main.29072761.chunk.js","sourcesContent":["import settings from \"./settings.json\"; // Set server url here\r\nimport Axios from \"axios\";\r\n\r\nfunction lastActive(){\r\n    const userStorage = localStorage.getItem(\"user\");\r\n    if (userStorage) {\r\n      const loggedInUser = JSON.parse(userStorage);\r\n      // setUser(foundUser);\r\n      console.log(\"local storage: \", loggedInUser);\r\n\r\n\r\n\r\n      Axios.post(settings.SERVER_URL + \"/api/userActive\", {\r\n        email: loggedInUser.email,\r\n      })\r\n        .then(() => {\r\n          console.log(\"user active updated\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"det gick inte att skicka\");\r\n          console.log(error.message);\r\n          if (error.message === \"Request failed with status code 406\") {\r\n            alert(\"Error 406. Testa att skicka igen.\");\r\n          }\r\n        });\r\n    }\r\n}\r\n\r\nexport default lastActive;","import React, { useEffect, useState } from \"react\";\r\n// import { useForm } from 'react-hook-form';\r\nimport \"./App.css\";\r\nimport Axios from \"axios\";\r\nimport {\r\n  Button,\r\n  Alert,\r\n  Card,\r\n  Form,\r\n  FormGroup,\r\n  InputGroup,\r\n  Row,\r\n  Container,\r\n  Nav,\r\n  Navbar,\r\n  Badge,\r\n} from \"react-bootstrap\";\r\nimport classNames from \"classnames\";\r\nimport settings from \"./settings.json\"; // Set server url here\r\n// import Navbar from \"./Navbar\";\r\nimport lastActive from \"./lastActive\";\r\nimport Linkify from \"react-linkify\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction App() {\r\n  const serverUrl = localStorage.getItem(\"serverUrl\");\r\n\r\n  const [issuesList, setIssuesList] = useState([]);\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [loggedIn, setLoggedIn] = useState(Boolean);\r\n  const [navButtonLink, setNavButtonLink] = useState(\"\");\r\n  const [navButtonText, setNavButtonText] = useState(\"\");\r\n  const [navUserState, setNavUserState] = useState(\"\");\r\n  const [navHello, setNavHello] = useState(\"\");\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    issue: \"\",\r\n    category: \"\",\r\n    priority: \"\",\r\n  });\r\n\r\n  var priorityList = [\r\n    { text: \"Inte Specificerad\", value: 0 },\r\n    { text: \"Låg\", value: 1 },\r\n    { text: \"Medel\", value: 2 },\r\n    { text: \"Hög\", value: 3 },\r\n  ];\r\n\r\n  const debug = true;\r\n  const categoriesArray = [\r\n    \"Klicka för att välja kategori\",\r\n    \"React Ticket\",\r\n    \"Home Assistant\",\r\n    \"zServer\",\r\n    \"Docker\",\r\n    \"Berit\",\r\n    \"Alice Home Assistant\",\r\n    \"Alice Lägenhet\",\r\n    \"Övrigt\",\r\n  ];\r\n\r\n  const categories = categoriesArray.map((item) => {\r\n    return (\r\n      <option key={item} value={item}>\r\n        {item}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  const priorities = priorityList.map((item) => {\r\n    return (\r\n      <option key={item.value} value={item.value}>\r\n        {item.text}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loggedIn = localStorage.getItem(\"user\");\r\n    const changedIssueStorage = localStorage.getItem(\"changedIssue\");\r\n    const changedIssue = JSON.parse(changedIssueStorage);\r\n    if (loggedIn) {\r\n      const loggedInUser = JSON.parse(loggedIn);\r\n      // setUser(foundUser);\r\n      console.log(\"local storage: \", loggedInUser);\r\n\r\n      setUsername(loggedInUser.name);\r\n      setEmail(loggedInUser.email);\r\n      setLoggedIn(true);\r\n\r\n      lastActive();\r\n\r\n      setNavButtonLink(\"/logout\");\r\n      setNavButtonText(\"Logga ut\");\r\n      setNavHello(\"Hej \" + loggedInUser.name + \"!\");\r\n      setNavUserState(\"Inloggad som \", loggedInUser.name);\r\n\r\n      setFormData({\r\n        ...formData,\r\n        name: loggedInUser.name,\r\n        email: loggedInUser.email,\r\n      });\r\n\r\n      // For debug\r\n      console.log(\"Username:\", loggedInUser.name);\r\n      console.log(\"email: \", loggedInUser.email);\r\n    }\r\n    if (!loggedIn) {\r\n      setNavButtonLink(\"/login\");\r\n      setNavButtonText(\"Logga in\");\r\n      setNavHello(\"Hej Världen!\");\r\n    }\r\n    if (changedIssue) {\r\n      // document.getElementById(changedIssue.id).scrollIntoView();\r\n      localStorage.removeItem(\"changedIssue\");\r\n    }\r\n\r\n    Axios.get(settings.SERVER_URL + \"/api/get\")\r\n      .then((response) => {\r\n        setIssuesList(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const updateList = () => {\r\n    console.log(\"updating list\");\r\n    Axios.get(settings.SERVER_URL + \"/api/get\").then((response) => {\r\n      if (debug) {\r\n        console.log(response.data);\r\n      }\r\n      setIssuesList(response.data);\r\n      window.location.reload(false);\r\n    });\r\n  };\r\n\r\n  function updateComplete(id, completeStatus) {\r\n    if (debug) {\r\n      console.log(id, completeStatus);\r\n    }\r\n    if (!loggedIn) {\r\n      alert(\"Du måste vara inloggad för att uppdatera\");\r\n      return;\r\n    }\r\n\r\n    Axios.post(settings.SERVER_URL + \"/api/patch/complete\", {\r\n      complete: Number(completeStatus),\r\n      id: id,\r\n    }).then(() => {\r\n      updateList();\r\n      if (debug) {\r\n        console.log(\"update complete ran\");\r\n      }\r\n    });\r\n  }\r\n\r\n  function updateCategory(id, category) {\r\n    console.log(id, category);\r\n    if (!loggedIn) {\r\n      alert(\"Du måste vara inloggad för att uppdatera\");\r\n      return;\r\n    }\r\n\r\n    Axios.patch(settings.SERVER_URL + \"/api/patch/category\", {\r\n      category: String(category),\r\n      id: id,\r\n    }).then(() => {\r\n      updateList();\r\n      if (debug) {\r\n        console.log(\"update category ran\");\r\n      }\r\n    });\r\n  }\r\n\r\n  function updatePriority(id, priority) {\r\n    console.log(id, priority);\r\n\r\n    Axios.patch(settings.SERVER_URL + \"/api/patch/priority\", {\r\n      priority: priority,\r\n      id: id,\r\n    }).then(() => {\r\n      updateList();\r\n      if (debug) {\r\n        console.log(\"update priority ran\");\r\n      }\r\n    });\r\n  }\r\n\r\n  const deleteIssue = (event) => {\r\n    console.log(event);\r\n\r\n    if (!loggedIn) {\r\n      alert(\"Du måste vara inloggad för att uppdatera\");\r\n      return;\r\n    }\r\n\r\n    Axios.post(settings.SERVER_URL + \"/api/delete/issue\", {\r\n      id: event,\r\n    }).then(() => {\r\n      updateList();\r\n    });\r\n  };\r\n\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const [issueUpdate, setIssueUpdate] = useState({\r\n    issue: \"\",\r\n    id: \"\",\r\n    category: \"\",\r\n  });\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n    event.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      console.log(formData);\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    setValidated(true);\r\n    submitIssue();\r\n  };\r\n\r\n  const handleUpdate = (event) => {\r\n    const form = event.currentTarget;\r\n    event.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      console.log(formData);\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    setValidated(true);\r\n    submitUpdate();\r\n  };\r\n\r\n  const submitIssue = () => {\r\n    if (!loggedIn) {\r\n      alert(\"Du måste vara inloggad för att uppdatera\");\r\n      return;\r\n    }\r\n    console.log(\"försöker skicka\");\r\n\r\n    Axios.post(settings.SERVER_URL + \"/api/createIssue\", {\r\n      senderName: formData.name,\r\n      issue: formData.issue,\r\n      senderEmail: formData.email,\r\n      complete: 0,\r\n      category: formData.category,\r\n      priority: formData.priority,\r\n    })\r\n      .then(() => {\r\n        console.log(\"successfully sended issue to server\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"det gick inte att skicka\");\r\n        console.log(error.message);\r\n        if (error.message === \"Request failed with status code 406\") {\r\n          alert(\"Error 406. Testa att skicka igen.\");\r\n        }\r\n      });\r\n  };\r\n\r\n  function submitUpdate() {\r\n    if (!loggedIn) {\r\n      alert(\"Du måste vara inloggad för att uppdatera\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"update sent\");\r\n    Axios.patch(settings.SERVER_URL + \"/api/patch/issue\", {\r\n      issue: issueUpdate.issue,\r\n      id: issueUpdate.id,\r\n      category: issueUpdate.category,\r\n      updater: username,\r\n    }).then(() => {\r\n      updateList();\r\n      localStorage.setItem(\r\n        \"changedIssue\",\r\n        JSON.stringify({ id: issueUpdate.id })\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Container fluid>\r\n          <Navbar.Brand href=\"/\">React Ticket</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n          <Navbar.Collapse id=\"navbarScroll\">\r\n            <Nav\r\n              className=\"me-auto my-2 my-lg-0\"\r\n              style={{ maxHeight: \"100px\" }}\r\n              navbarScroll\r\n            >\r\n              <Nav.Link href=\"/\">Hem</Nav.Link>\r\n              <Nav.Link href=\"/settings\">Inställningar</Nav.Link>\r\n              {/* <NavDropdown title=\"Link\" id=\"navbarScrollingDropdown\">\r\n                <NavDropdown.Item href=\"#action3\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action4\">\r\n                  Another action\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action5\">\r\n                  Something else here\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n              <Nav.Link href=\"#\" disabled>\r\n                Link\r\n              </Nav.Link> */}\r\n            </Nav>\r\n            <Form className=\"d-flex\">\r\n              <Navbar.Text className=\"mx-2\">\r\n                {navUserState} {username}\r\n              </Navbar.Text>\r\n              <Button variant=\"primary\" href={navButtonLink}>\r\n                {navButtonText}\r\n              </Button>\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n\r\n      <Alert key=\"warning\" variant=\"warning\" className=\"m-1\">\r\n        Denna applikation är fortfarande inte färdig, så den kanske inte\r\n        fungerar fullt som den ska.\r\n      </Alert>\r\n\r\n      <div className=\"jumbotron m-3\">\r\n        <h1 className=\"display-4\">{navHello}</h1>\r\n        <p className=\"lead\">\r\n          Det här är ett egenbyggt ticket system av Emil Zackrisson\r\n        </p>\r\n        <hr className=\"my-4\" />\r\n      </div>\r\n\r\n      <Form\r\n        noValidate\r\n        validated={validated}\r\n        onSubmit={handleSubmit}\r\n        className=\"container-xl mb-5 border p-3 rounded\"\r\n      >\r\n        <Row className=\"mb-3\">\r\n          <FormGroup md=\"4\" controlId=\"validationCustom01\">\r\n            <Form.Label>Namn</Form.Label>\r\n\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Namn\"\r\n              // defaultValue={username}\r\n              value={username}\r\n              readOnly={loggedIn}\r\n              onChange={(e) =>\r\n                setFormData({ ...formData, name: e.target.value })\r\n              }\r\n            />\r\n            <Form.Control.Feedback>Ser bra ut!</Form.Control.Feedback>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Du måste ange ditt namn.\r\n            </Form.Control.Feedback>\r\n          </FormGroup>\r\n          <Form.Group md=\"4\" controlId=\"validationCustomUsername\">\r\n            <Form.Label>E-post</Form.Label>\r\n            <InputGroup hasValidation>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"E-post\"\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                // defaultValue={email}\r\n                value={email}\r\n                readOnly={loggedIn}\r\n                required\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, email: e.target.value })\r\n                }\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Du måste ange din E-post.\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n        </Row>\r\n        <Row className=\"mb-3\">\r\n          <Form.Group md=\"6\" controlId=\"validationCustom03\">\r\n            <Form.Label>Problem</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Jag har problem med...\"\r\n              required\r\n              onChange={(e) =>\r\n                setFormData({ ...formData, issue: e.target.value })\r\n              }\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Vad är ditt problem?\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Kategori</Form.Label>\r\n            <Form.Select\r\n              aria-label=\"Kategori\"\r\n              onChange={(e) =>\r\n                setFormData({ ...formData, category: e.target.value })\r\n              }\r\n            >\r\n              {categories}\r\n            </Form.Select>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Prioritet</Form.Label>\r\n            <Form.Select\r\n              aria-label=\"Prioritet\"\r\n              onChange={(e) =>\r\n                setFormData({ ...formData, priority: e.target.value })\r\n              }\r\n            >\r\n              {priorities}\r\n            </Form.Select>\r\n          </Form.Group>\r\n          {/* {console.log(formData.category)} */}\r\n        </Row>\r\n        <Button type=\"submit\">Skicka</Button>\r\n        {/* <Button onClick={updateList} className=\"m-2 btn-warning\">test ladda lista</Button> */}\r\n\r\n        {/* <Button onClick={testSend}>Testa</Button> */}\r\n      </Form>\r\n\r\n      {issuesList.map((val) => {\r\n        // console.log(val);\r\n\r\n        // Sätter klasser och specifik färg beroende på om den är klar.\r\n        var issueCardClasses = classNames(\r\n          {\r\n            \"border-success\": Boolean(val.complete), // Kant grön\r\n            \"border-warning\": !Boolean(val.complete), // Kant röd\r\n          },\r\n          \"mb-3\",\r\n          \"container-xl\"\r\n        );\r\n\r\n        const time = new Date(val.timestamp).toLocaleString(\"sv-SE\");\r\n        // console.log(val.id, val.priority)\r\n\r\n        if (val.priority != \"\") {\r\n          var priorityText = \"Prioritet: \" + priorityList[val.priority].text;\r\n          // console.log(\"Prioritet id\", val.id, \" = \", priorityText)\r\n          var priorityBadgeBg = classNames(\r\n            {\r\n              secondary: val.priority === \"0\",\r\n              info: val.priority === \"1\",\r\n              warning: val.priority === \"2\",\r\n              danger: val.priority === \"3\",\r\n            },\r\n            \"mx-1\"\r\n          );\r\n        }\r\n\r\n        // Check if issue is JSON\r\n        try {\r\n          var issueJson = JSON.parse(val.issue);\r\n          const issueLength = issueJson.length;\r\n          console.log(issueJson);\r\n\r\n          // console.log(\"längd: \",issueLength);\r\n\r\n          if (issueLength > 1) {\r\n            // Om problem har blivit uppdaterat\r\n            const timeUpdated = new Date(\r\n              issueJson[issueLength - 1].timestamp\r\n            ).toLocaleString(\"sv-SE\");\r\n            var updated = \"| Uppdaterades den \" + timeUpdated;\r\n\r\n            var issue = issueJson[issueLength - 1].issue;\r\n            var updater = issueJson[issueLength - 1].updater;\r\n          } else {\r\n            var issue = issueJson.issue;\r\n          }\r\n        } catch (e) {\r\n          var issue = val.issue;\r\n          const updated = \"\";\r\n        }\r\n\r\n        // var issue = val.issue;\r\n\r\n        return (\r\n          // Issues cards are placed here\r\n          <div id={val.id} key={val.id}>\r\n            <Card className={issueCardClasses}>\r\n              <Card.Body>\r\n                <Card.Title>\r\n                  #{val.id} | {val.senderName}{\" \"}\r\n                  <a href={\"mailto:\" + val.senderEmail}>{val.senderEmail}</a> |{\" \"}\r\n                  {val.category} | {time}\r\n                  <Badge bg={priorityBadgeBg}>{priorityText}</Badge>\r\n                </Card.Title>\r\n                <Card.Text>\r\n                  <Linkify>{issue}</Linkify>\r\n                </Card.Text>\r\n                <Form onSubmit={handleUpdate}>\r\n                  <FormGroup controlId=\"validationUpdate\">\r\n                    <Form.Label>\r\n                      Uppdatera problem {updated} av {updater}\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Problem\"\r\n                      onChange={(e) =>\r\n                        setIssueUpdate({\r\n                          ...issueUpdate,\r\n                          issue: e.target.value,\r\n                          id: val.id,\r\n                        })\r\n                      }\r\n                      defaultValue={issue}\r\n                    />\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      label=\"Markera som klar\"\r\n                      checked={val.complete}\r\n                      onChange={(e) => updateComplete(val.id, e.target.checked)}\r\n                    />\r\n                  </FormGroup>\r\n                  <Form.Group>\r\n                    <Form.Label>Kategori</Form.Label>\r\n                    <Form.Select\r\n                      aria-label=\"Kategori\"\r\n                      onChange={(e) => updateCategory(val.id, e.target.value)}\r\n                      defaultValue={val.category}\r\n                    >\r\n                      {categories}\r\n                    </Form.Select>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Label>Prioritet</Form.Label>\r\n                    <Form.Select\r\n                      aria-label=\"Prioritet\"\r\n                      onChange={(e) => updatePriority(val.id, e.target.value)}\r\n                      defaultValue={val.priority}\r\n                    >\r\n                      {priorities}\r\n                    </Form.Select>\r\n                  </Form.Group>\r\n                  <Button type=\"submit\">Uppdatera</Button>\r\n                  <Button\r\n                    type=\"button\"\r\n                    className=\"btn-danger m-2\"\r\n                    onClick={(e) => deleteIssue(val.id)}\r\n                  >\r\n                    Ta bort\r\n                  </Button>\r\n                </Form>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useState, useEffect } from \"react\";\r\n// import { useForm } from 'react-hook-form';\r\nimport Axios from \"axios\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  InputGroup,\r\n  Row,\r\n  Alert,\r\n  Navbar,\r\n  Container,\r\n  Nav,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport settings from \"./settings.json\"; // Set server url here\r\nimport bcrypt from \"bcryptjs\";\r\nimport lastActive from \"./lastActive\";\r\n\r\nfunction Settings() {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    permissionLevel: \"\",\r\n  });\r\n  const [validated, setValidated] = useState(false);\r\n  const [loggedIn, setLoggedIn] = useState(Boolean);\r\n  const [permissionLevel, setPermissionLevel] = useState(\"\");\r\n  const [userList, setUserList] = useState([]);\r\n\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n    event.preventDefault();\r\n    console.log(\"Login submitted\");\r\n    if (form.checkValidity() === false) {\r\n      console.log(formData);\r\n\r\n      event.stopPropagation();\r\n    }\r\n\r\n    setValidated(true);\r\n    addUser();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const userStorage = localStorage.getItem(\"user\");\r\n    if (userStorage) {\r\n      const loggedInUser = JSON.parse(userStorage);\r\n      // setUser(foundUser);\r\n      console.log(\"local storage: \", loggedInUser);\r\n\r\n      setLoggedIn(true);\r\n      setPermissionLevel(loggedInUser.permissionlevel);\r\n\r\n      getAllUsers();\r\n\r\n      lastActive();\r\n    }\r\n    if (!userStorage) {\r\n      alert(\"Du är inte inloggad.\");\r\n      window.location.replace(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  function addUser() {\r\n    bcrypt.genSalt(10, function(err, salt) {\r\n      bcrypt.hash(formData.password, salt, function(err, hash) {\r\n        console.log(\"email: \", formData.email, \" hash: \", hash);\r\n        // Store hash in your password DB.\r\n\r\n        console.log(\"försöker skicka\");\r\n        console.log(\"permission send\", formData.permissionLevel);\r\n\r\n        Axios.post(settings.SERVER_URL + \"/api/user/add\", {\r\n          name: formData.name,\r\n          email: formData.email,\r\n          hash: hash,\r\n          permissionLevel: formData.permissionLevel,\r\n        })\r\n          .then(() => {\r\n            console.log(\"new user added\");\r\n            window.location.reload(false);\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"det gick inte att skicka\");\r\n            console.log(error.message);\r\n            if (error.message === \"Request failed with status code 406\") {\r\n              alert(\"Error 406. Testa att skicka igen.\");\r\n            }\r\n          });\r\n      });\r\n    });\r\n  }\r\n\r\n  function getAllUsers(){\r\n    Axios.get(settings.SERVER_URL + \"/api/listUsers\").then((response) => {\r\n      \r\n        \r\n        const users = response.data;\r\n        delete response.data[0].hash;\r\n        console.log(users);\r\n        setUserList(users);\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  if (loggedIn === true && permissionLevel === \"3\") {\r\n    return (\r\n      <>\r\n        <Navbar bg=\"light\" variant=\"light\">\r\n          <Container fluid>\r\n            <Navbar.Brand href=\"#home\">React Ticket</Navbar.Brand>\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"/\">Hem</Nav.Link>\r\n              <Nav.Link href=\"/settings\">Inställningar</Nav.Link>\r\n              {/* <Nav.Link href=\"#pricing\">Pricing</Nav.Link> */}\r\n            </Nav>\r\n          </Container>\r\n        </Navbar>\r\n\r\n        <Alert key=\"warning\" variant=\"warning\" className=\"m-1\">\r\n          Denna applikation är fortfarande inte färdig, så den kanske inte\r\n          fungerar fullt som den ska.\r\n        </Alert>\r\n        {/* \r\n          <Navbar className=\"container-fluid text-bg-dark p-3\">\r\n            <Container className=\"container-fluid\">\r\n              <Navbar.Brand href=\"/\">React Ticket</Navbar.Brand>\r\n              <Navbar.Toggle />\r\n              <Navbar.Collapse className=\"justify-content-end\">\r\n                <Navbar.Text className=\"m-2\">\r\n                  {navUserState} {username}\r\n                </Navbar.Text>\r\n                <Button variant=\"primary\" href={navButtonLink}>\r\n                  {navButtonText}\r\n                </Button>\r\n              </Navbar.Collapse>\r\n            </Container>\r\n          </Navbar> */}\r\n\r\n        {/* <Button variant=\"warning\" onClick={checkUser}>Test check user</Button> */}\r\n\r\n        <div className=\"jumbotron m-3\"> \r\n          <h1 className=\"display-4\">Inställningar</h1>\r\n          {/* <p className=\"lead\">Det här är ett egenbyggt ticket system av Emil Zackrisson</p> */}\r\n          <hr className=\"my-4\" />\r\n        </div>\r\n\r\n        <section className=\"container border p-3 rounded\">\r\n          <h4 className=\"display-6 m-3 \">Användare</h4>\r\n          <section className=\"container border p-3 rounded\">\r\n          <h4 className=\"display-6 m-3 \">Lägg till Användare</h4>\r\n            <Form\r\n              noValidate\r\n              validated={validated}\r\n              onSubmit={handleSubmit}\r\n              className=\"container-xl m-3\"\r\n            >\r\n              <Form.Group md=\"4\" controlId=\"validationName\">\r\n                <Form.Label>För och efternamn</Form.Label>\r\n                <InputGroup hasValidation>\r\n                  <InputGroup.Text id=\"inputGroupPrepend\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width=\"16\"\r\n                      height=\"16\"\r\n                      fill=\"currentColor\"\r\n                      className=\"bi bi-person\"\r\n                      viewBox=\"0 0 16 16\"\r\n                    >\r\n                      <path d=\"M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\" />\r\n                    </svg>\r\n                  </InputGroup.Text>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Ex. Anders Andersson\"\r\n                    aria-describedby=\"inputGroupPrepend\"\r\n                    required\r\n                    onChange={(e) =>\r\n                      setFormData({ ...formData, name: e.target.value })\r\n                    }\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Du måste ange ditt lösenord.\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Row className=\"mb-3\">\r\n                <Form.Group md=\"4\" controlId=\"validationEmail\">\r\n                  <Form.Label>E-post</Form.Label>\r\n                  <InputGroup hasValidation>\r\n                    <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      placeholder=\"Ex. anders.andersson@gmail.com\"\r\n                      aria-describedby=\"inputGroupPrepend\"\r\n                      required\r\n                      onChange={(e) =>\r\n                        setFormData({ ...formData, email: e.target.value })\r\n                      }\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Du måste ange din E-post.\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group md=\"4\" controlId=\"validationPassword\">\r\n                  <Form.Label>Lösenord</Form.Label>\r\n                  <InputGroup hasValidation>\r\n                    <InputGroup.Text id=\"inputGroupPrepend\">\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        fill=\"currentColor\"\r\n                        className=\"bi bi-key\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path d=\"M0 8a4 4 0 0 1 7.465-2H14a.5.5 0 0 1 .354.146l1.5 1.5a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0L13 9.207l-.646.647a.5.5 0 0 1-.708 0L11 9.207l-.646.647a.5.5 0 0 1-.708 0L9 9.207l-.646.647A.5.5 0 0 1 8 10h-.535A4 4 0 0 1 0 8zm4-3a3 3 0 1 0 2.712 4.285A.5.5 0 0 1 7.163 9h.63l.853-.854a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.793-.793-1-1h-6.63a.5.5 0 0 1-.451-.285A3 3 0 0 0 4 5z\" />\r\n                        <path d=\"M4 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\" />\r\n                      </svg>\r\n                    </InputGroup.Text>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Lösenord\"\r\n                      aria-describedby=\"inputGroupPrepend\"\r\n                      required\r\n                      onChange={(e) =>\r\n                        setFormData({ ...formData, password: e.target.value })\r\n                      }\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Du måste ange ditt lösenord.\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Tillstånd</Form.Label>\r\n                  <Form.Select\r\n                    aria-label=\"Tillstånd\"\r\n                    onChange={(e) =>\r\n                      setFormData({\r\n                        ...formData,\r\n                        permissionLevel: e.target.value,\r\n                      })\r\n                    }\r\n                  >\r\n                    <option>Öppna menyn för att välja</option>\r\n                    <option value=\"1\">1 - Användare</option>\r\n                    <option value=\"3\">3 - Admin</option>\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Row>\r\n              <Button type=\"submit\">Lägg till användare</Button>\r\n              {/* <Button type=\"submit\">Skicka</Button> */}\r\n              {/* <Button onClick={updateList} className=\"m-2 btn-warning\">test ladda lista</Button> */}\r\n\r\n              {/* <Button onClick={testSend}>Testa</Button> */}\r\n            </Form>\r\n          </section>\r\n          <section className=\"userList container border p-3 rounded my-3\">\r\n\r\n        <h4 className=\"display-6 m-3 \">Alla användare</h4>\r\n          {userList.map((val) => {\r\n            if(val.permissionlevel === 1){\r\n              const permissionLevelText = \"1 - Användare\";\r\n            }\r\n            if(val.permissionlevel === 3){\r\n              const permissionLevelText = \"3 - Admin\";\r\n            }\r\n      \r\n            const userCreated = new Date(val.timeCreated).toLocaleString(\"sv-SE\")\r\n            const userLastLogin = new Date(val.lastLogin).toLocaleString(\"sv-SE\")\r\n            const userLastActive = new Date(val.lastActive).toLocaleString(\"sv-SE\")\r\n            console.log(userList)\r\n\r\n            return(\r\n              <Card className=\"my-3\">\r\n                <Card.Body>\r\n                  <Card.Title>{val.name}</Card.Title>\r\n                  <Card.Text>E-post: {val.email}</Card.Text>\r\n                  <Card.Text>Permission Level: {val.permissionlevel}</Card.Text>\r\n                  <Card.Text>Konto skapat: {userCreated}</Card.Text>\r\n                  <Card.Text>Senaste inloggningen: {userLastLogin}</Card.Text>\r\n                  <Card.Text>Senast aktiv: {userLastActive}</Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            )\r\n          })}\r\n        </section>\r\n        </section>\r\n\r\n        \r\n      </>\r\n    );\r\n  }\r\n  if (permissionLevel !== \"3\") {\r\n    console.log(permissionLevel);\r\n    return (\r\n      <>\r\n        <h1>Error - Not Allowed</h1>\r\n        <p>You have not the permission to access the settings.</p>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Settings;\r\n","import React, { useState, useEffect } from \"react\";\r\n// import { useForm } from 'react-hook-form';\r\nimport Axios from \"axios\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  InputGroup,\r\n  Row,\r\n  Alert,\r\n  Navbar,\r\n  Container,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\nimport settings from \"./settings.json\"; // Set server url here\r\nimport bcrypt from \"bcryptjs\";\r\n// import {} from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [navButtonLink, setNavButtonLink] = useState(\"\");\r\n  const [navButtonText, setNavButtonText] = useState(\"\");\r\n  const [navUserState, setNavUserState] = useState(\"\");\r\n  const [navHello, setNavHello] = useState(\"\");\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n    console.log(\"Login submitted\");\r\n    if (form.checkValidity() === false) {\r\n      console.log(formData);\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    setValidated(true);\r\n    // submitIssue();\r\n    checkUser();\r\n  };\r\n\r\n  function alreadyLoggedIn() {\r\n    alert(\"Du är redan inloggad. Du kommer att skickas till startsidan.\");\r\n    window.location.replace(\"/\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    const loggedIn = localStorage.getItem(\"user\");\r\n    if (loggedIn) {\r\n      alreadyLoggedIn();\r\n    }\r\n    if (!loggedIn) {\r\n      setNavButtonLink(\"/login\");\r\n      setNavButtonText(\"Logga in\");\r\n      setNavHello(\"Hej Världen!\");\r\n    }\r\n  });\r\n\r\n  function checkUser() {\r\n    // var res = \"\";\r\n    // const populateData = (data) => { setHash(data) }\r\n    // console.log(response.data[0].hash)\r\n\r\n    // addUser(formData.email, formData.password);\r\n\r\n    var email = formData.email;\r\n    var password = formData.password;\r\n\r\n    if ((email !== \"\") | (password !== \"\")) {\r\n      //Ladda användare från databas\r\n      Axios.post(settings.SERVER_URL + \"/api/user\", {\r\n        email: email,\r\n      }).then(function (response) {\r\n        console.log(response.data);\r\n\r\n        console.log(typeof response.data);\r\n\r\n        // Check if email exists in database\r\n        if (response.data.length === 0) {\r\n          alert(\"Fel inloggningsuppgifter.\");\r\n        }\r\n\r\n        if (response.data.length !== 0) {\r\n          // alert(\"E-post adressen är rätt.\")\r\n\r\n          const hash = response.data[0].hash;\r\n\r\n          bcrypt.compare(password, hash).then((res) => {\r\n            // res === true\r\n            console.log(\"password \", res);\r\n\r\n            if (res === true) {\r\n              delete response.data[0].hash;\r\n              localStorage.setItem(\"user\", JSON.stringify(response.data[0]));\r\n\r\n              Axios.post(settings.SERVER_URL + \"/api/userLoggedIn\", {\r\n                email: response.data[0].email,\r\n              }).then(function (response) {\r\n                console.log(\"inserted time\");\r\n              });\r\n              alert(\"Du kommer nu att skickas till startsidan.\");\r\n              window.location.replace(\"/\");\r\n            } else {\r\n              alert(\"Fel inloggningsuppgifter.\");\r\n            }\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      alert(\"Du måste skiva in både e-post och lösenord\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Alert key=\"warning\" variant=\"warning\" className=\"m-1\">\r\n        Denna applikation är fortfarande inte färdig, så den kanske inte\r\n        fungerar fullt som den ska.\r\n      </Alert>\r\n\r\n      <Navbar className=\"container-fluid text-bg-dark p-3\">\r\n        <Container className=\"container-fluid\">\r\n          <Navbar.Brand href=\"/\">React Ticket</Navbar.Brand>\r\n          <Navbar.Toggle />\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            <Navbar.Text className=\"m-2\">\r\n              {navUserState} {username}\r\n            </Navbar.Text>\r\n            <Button variant=\"primary\" href={navButtonLink}>\r\n              {navButtonText}\r\n            </Button>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n\r\n      {/* <Button variant=\"warning\" onClick={checkUser}>Test check user</Button> */}\r\n      <Form\r\n        noValidate\r\n        validated={validated}\r\n        onSubmit={handleSubmit}\r\n        className=\"container-xl mb-5 border p-3 rounded\"\r\n      >\r\n        <Row className=\"mb-3\">\r\n          <Form.Group md=\"4\" controlId=\"validationEmail\">\r\n            <Form.Label>E-post</Form.Label>\r\n            <InputGroup hasValidation>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"E-post\"\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                required\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, email: e.target.value })\r\n                }\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Du måste ange din E-post.\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n          <Form.Group md=\"4\" controlId=\"validationPassword\">\r\n            <Form.Label>Lösenord</Form.Label>\r\n            <InputGroup hasValidation>\r\n              {/* <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text> */}\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Lösenord\"\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                required\r\n                onChange={(e) =>\r\n                  setFormData({ ...formData, password: e.target.value })\r\n                }\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Du måste ange ditt lösenord.\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n        </Row>\r\n        <Button type=\"button\" onClick={checkUser}>\r\n          Logga In\r\n        </Button>\r\n        {/* <Button variant=\"outline-secondary\" className=\"mx-2\">\r\n          Glömt lösenord?\r\n        </Button> */}\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction Logout() {\r\n\r\n\r\n    useEffect(() => {\r\n        localStorage.clear();\r\n      }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1>Du är nu utloggad!</h1>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Logout;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\n// import Todo from './todo';\r\nimport Settings from './Settings';\r\nimport Login from './Login';\r\nimport Logout from './Logout';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\n// console.log(App)\r\nroot.render(\r\n    <>\r\n        <Router>\r\n            <Routes>\r\n                <Route exact path=\"/\" element={<App />} />\r\n                <Route exact path=\"/settings\" element={<Settings />} />\r\n                <Route exact path=\"/login\" element={<Login />} />\r\n                <Route exact path='/logout' element={<Logout/>}/>\r\n            </Routes>\r\n        </Router>\r\n        {/* <Todo /> */}\r\n    </>\r\n);"],"sourceRoot":""}